# Generated by Django 5.0.6 on 2024-07-04 12:28

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("academy", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время создания записи",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата и время последнего обновления записи",
                        verbose_name="Дата последнего обновления",
                    ),
                ),
                (
                    "facebook",
                    models.URLField(blank=True, null=True, verbose_name="Facebook"),
                ),
                (
                    "instagram",
                    models.URLField(blank=True, null=True, verbose_name="Instagram"),
                ),
                (
                    "whatsapp",
                    models.URLField(blank=True, null=True, verbose_name="WhatsApp"),
                ),
                (
                    "telegram",
                    models.URLField(blank=True, null=True, verbose_name="Telegram"),
                ),
                (
                    "phone",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Введите номер телефона сотрудника",
                        max_length=128,
                        region=None,
                        verbose_name="Телефон",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        help_text="Введите электронную почту сотрудника",
                        max_length=254,
                        null=True,
                        verbose_name="Электронная почта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Контакт",
                "verbose_name_plural": "Контакты",
            },
        ),
        migrations.CreateModel(
            name="Teacher",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Дата и время создания записи",
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Дата и время последнего обновления записи",
                        verbose_name="Дата последнего обновления",
                    ),
                ),
                ("first_name", models.CharField(max_length=255, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=255, verbose_name="Фамилия")),
                (
                    "patronymic",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Отчество"
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        default=1,
                        help_text="Укажите рейтинг сотрудника (от 0 до 10)",
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Рейтинг сотрудника",
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        default="default_image.jpg",
                        help_text="Загрузите изображение для аватара сотрудника",
                        null=True,
                        upload_to="teacher_avatars/",
                        verbose_name="Фотография сотрудника",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Роль"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Введите информацию о сотруднике",
                        null=True,
                        verbose_name="О сотруднике",
                    ),
                ),
                (
                    "experience",
                    models.TextField(
                        blank=True,
                        help_text="Используйте красную строку для разделения опыта (макс. 20)",
                        null=True,
                        verbose_name="Опыт работы",
                    ),
                ),
                (
                    "contacts",
                    models.ForeignKey(
                        blank=True,
                        help_text="Укажите контакты сотрудника",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="teachers",
                        to="account.contact",
                        verbose_name="Контакты",
                    ),
                ),
                (
                    "courses",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Выберите курсы, связанные с сотрудником",
                        related_name="teachers",
                        to="academy.course",
                        verbose_name="Курсы",
                    ),
                ),
            ],
            options={
                "verbose_name": "Преподаватель",
                "verbose_name_plural": "Преподаватели",
            },
        ),
    ]
